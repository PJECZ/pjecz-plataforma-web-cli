{
  "CLI request_api.py": {
    "scope": "python",
    "prefix": "clirequestapi",
    "description": "Contenido de request_api.py",
    "body": [
      "\"\"\"",
      "CLI ${1:Plural} Request API",
      "\"\"\"",
      "from typing import Any",
      "",
      "import requests",
      "",
      "from config.settings import API_KEY, API_URL, LIMIT, TIMEOUT",
      "from lib.exceptions import MyConnectionError, MyRequestError, MyResponseError, MyStatusCodeError",
      "",
      "",
      "def get_${2:plural}(",
      "\tlimit: int = LIMIT,",
      "\toffset: int = 0,",
      ") -> Any:",
      "\t\"\"\"Solicitar ${3:plural}\"\"\"",
      "\tparametros = {\"limit\": limit}",
      "\tif offset > 0:",
      "\t\tparametros[\"offset\"] = offset",
      "\ttry:",
      "\t\trespuesta = requests.get(",
      "\t\t\tf\"{API_URL}/${2:plural}\",",
      "\t\t\theaders={\"X-Api-Key\": API_KEY},",
      "\t\t\tparams=parametros,",
      "\t\t\ttimeout=TIMEOUT,",
      "\t\t)",
      "\t\trespuesta.raise_for_status()",
      "\texcept requests.exceptions.ConnectionError as error:",
      "\t\traise MyConnectionError(\"No hubo respuesta al solicitar ${3:plural}\") from error",
      "\texcept requests.exceptions.HTTPError as error:",
      "\t\traise MyStatusCodeError(\"Error Status Code al solicitar ${3:plural}: \" + str(error)) from error",
      "\texcept requests.exceptions.RequestException as error:",
      "\t\traise MyRequestError(\"Error inesperado al solicitar ${3:plural}\") from error",
      "\tdatos = respuesta.json()",
      "\tif \"success\" not in datos or datos[\"success\"] is False or \"result\" not in datos:",
      "\t\tif \"message\" in datos:",
      "\t\t\traise MyResponseError(\"Error al solicitar ${3:plural}: \" + datos[\"message\"])",
      "\t\traise MyResponseError(\"Error al solicitar ${3:plural}\")",
      "\treturn datos[\"result\"]",
      ""
    ]
  }
}
