{
  "CLI app.py": {
    "scope": "python",
    "prefix": "cliapp",
    "description": "Contenido de app.py",
    "body": [
      "\"\"\"",
      "CLI ${1:Plural} App",
      "\"\"\"",
      "import csv",
      "from datetime import datetime",
      "",
      "import rich",
      "import typer",
      "",
      "from config.settings import LIMIT",
      "from lib.exceptions import MyAnyError",
      "from lib.requests import requests_get",
      "",
      "encabezados = [\"ID\", \"Creado\", \"Clave\", \"Descripcion\"]",
      "",
      "app = typer.Typer()",
      "",
      "",
      "@app.command()",
      "def consultar(",
      "\tlimit: int = LIMIT,",
      "\toffset: int = 0,",
      "):",
      "\t\"\"\"Consultar ${2:plural}\"\"\"",
      "\trich.print(\"Consultar ${2:plural}...\")",
      "",
      "\t# Consultar a la API",
      "\tparametros = {\"limit\": limit, \"offset\": offset}",
      "\ttry:",
      "\t\trespuesta = requests_get(",
      "\t\t\tsubdirectorio=\"${3:plural}\",",
      "\t\t\tparametros=parametros,",
      "\t\t)",
      "\texcept MyAnyError as error:",
      "\t\ttyper.secho(str(error), fg=typer.colors.RED)",
      "\t\traise typer.Exit()",
      "",
      "\t# Mostrar la tabla",
      "\tconsole = rich.console.Console()",
      "\ttable = rich.table.Table()",
      "\tfor enca in encabezados:",
      "\t\ttable.add_column(enca)",
      "\tfor registro in respuesta[\"items\"]:",
      "\t\tcreado_datetime = datetime.fromisoformat(registro[\"creado\"].replace(\"Z\", \"+00:00\"))",
      "\t\ttable.add_row(",
      "\t\t\tstr(registro[\"id\"]),",
      "\t\t\tcreado_datetime.strftime(\"%Y-%m-%d %H:%M:%S\"),",
      "\t\t\tregistro[\"clave\"],",
      "\t\t\tregistro[\"descripcion\"],",
      "\t\t\t\"SI\" if registro[\"es_x\"] else \"NO\",",
      "\t\t)",
      "\tconsole.print(table)",
      "",
      "\t# Mostrar el total",
      "\trich.print(f\"Total: [green]{respuesta['total']}[/green] ${3:plural}\")",
      ""
    ]
  },
  "CLI app.py guardar": {
    "scope": "python",
    "prefix": "cliappguardar",
    "description": "Comando guardar",
    "body": [
      "@app.command()",
      "def guardar():",
      "\t\"\"\" Guardar ${1:plural} en un archivo CSV \"\"\"",
      "\trich.print(\"Guardar ${1:plural}...\")",
      "",
      "\t# Definir el nombre del archivo CSV",
      "\tfecha_hora = datetime.now().strftime(\"%Y%m%d%H%M%S\")",
      "\tnombre_archivo_csv = f\"${2:plural}_{fecha_hora}.csv\"",
      "",
      "\t# Guardar los datos en un archivo CSV haciendo bucle de consultas a la API",
      "\twith open(nombre_archivo_csv, \"w\", encoding=\"utf-8\") as archivo:",
      "\t\tescritor = csv.writer(archivo)",
      "\t\tescritor.writerow(encabezados)",
      "\t\toffset = 0",
      "\t\twhile True:",
      "\t\t\tparametros = {\"limit\": limit, \"offset\": offset}",
      "\t\t\ttry:",
      "\t\t\t\trespuesta = requests_get(",
      "\t\t\t\t\tsubdirectorio=\"${3:plural}\",",
      "\t\t\t\t\tparametros=parametros,",
      "\t\t\t\t)",
      "\t\t\texcept MyAnyError as error:",
      "\t\t\t\ttyper.secho(str(error), fg=typer.colors.RED)",
      "\t\t\t\traise typer.Exit()",
      "\t\t\tfor registro in respuesta[\"items\"]:",
      "\t\t\t\tcreado_datetime = datetime.fromisoformat(registro[\"creado\"].replace(\"Z\", \"+00:00\"))",
      "\t\t\t\tescritor.writerow([",
      "\t\t\t\t\tregistro[\"id\"],",
      "\t\t\t\t\tcreado_datetime.strftime(\"%Y-%m-%d %H:%M:%S\"),",
      "\t\t\t\t\tregistro[\"clave\"],",
      "\t\t\t\t\tregistro[\"descripcion\"],",
      "\t\t\t\t])",
      "\t\t\toffset += LIMIT",
      "\t\t\tif offset >= respuesta[\"total\"]:",
      "\t\t\t\tbreak",
      "",
      "\t# Mensaje de termino",
      "\trich.print(f\"Total: [green]{respuesta['total']}[/green] ${1:plural} guardados en el archivo {nombre_archivo_csv}\")",
      ""
    ]
  }
}
